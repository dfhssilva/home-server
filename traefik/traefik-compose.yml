version: '3'

services:
  traefik:
    # The official v2 Traefik docker image
    image: traefik:v2.9
    command: 
      # Enable the Traefik dashboard
      - "--api.dashboard=true"
      # Enabling docker provider
      - "--providers.docker"
      # Do not expose containers unless explicitly told so
      - "--providers.docker.exposedbydefault=false"
      # Traefik will listen to incoming request (necessary for HTTP challenge) on the port 80 (http)
      - "--entrypoints.web.address=:80"
      # Traefik will listen to incoming request on the port 443 (https)
      - "--entrypoints.websecure.address=:443"
      # Enable a tls challenge named "myresolver"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      # Tell it to use our predefined entrypoint named "web"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      # The email to provide to let's encrypt
      - "--certificatesresolvers.myresolver.acme.email=dfhssilva@protonmail.com"
      # Tell to store the certificate on a path under our volume
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      # Set default docker network (necessary for containers with multiple networks) 
      - "--providers.docker.network=home-server"
    ports:
      # The HTTP port (necessary for HTTP challenge)
      - "80:80"
      # The HTTPS port
      - "443:443"
      # The Web UI
      - "8080:8080"
    volumes:
      # Create a letsencrypt dir within the folder where the docker-compose file is
      - ./letsencrypt:/letsencrypt
      # So that Traefik can read the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - frontend 
    labels:
      - "traefik.http.routers.dashboard.rule=Host(`traefik.dfhssilva.xyz`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.usersfile=./usersfile"

networks:
  frontend:
    external: true
    name: home-server 